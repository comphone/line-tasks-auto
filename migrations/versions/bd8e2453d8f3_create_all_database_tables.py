"""Create all database tables

Revision ID: bd8e2453d8f3
Revises: 
Create Date: 2025-09-05 07:15:38.182085

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'bd8e2453d8f3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('organization', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('map_url', sa.Text(), nullable=True),
    sa.Column('line_user_id', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=80), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('warehouse',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('technician_name', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('jobs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('job_title', sa.Text(), nullable=False),
    sa.Column('job_type', sa.String(length=50), nullable=False),
    sa.Column('assigned_technician', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('completed_date', sa.DateTime(), nullable=True),
    sa.Column('product_details', sa.JSON(), nullable=True),
    sa.Column('internal_notes', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stock_level',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_code', sa.String(length=100), nullable=False),
    sa.Column('warehouse_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouse.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('product_code', 'warehouse_id', name='_product_warehouse_uc')
    )
    with op.batch_alter_table('stock_level', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_stock_level_product_code'), ['product_code'], unique=False)

    op.create_table('billing_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('billed_date', sa.DateTime(), nullable=True),
    sa.Column('paid_date', sa.DateTime(), nullable=True),
    sa.Column('payment_due_date', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('billing_status', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_billing_status_job_id'), ['job_id'], unique=True)

    op.create_table('job_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('item_name', sa.String(length=255), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('added_by', sa.String(length=100), nullable=True),
    sa.Column('added_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('summary_date', sa.DateTime(), nullable=True),
    sa.Column('report_type', sa.String(length=50), nullable=False),
    sa.Column('work_summary', sa.Text(), nullable=True),
    sa.Column('technicians', sa.String(length=255), nullable=True),
    sa.Column('is_internal', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('attachments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('report_id', sa.Integer(), nullable=False),
    sa.Column('drive_file_id', sa.String(length=255), nullable=False),
    sa.Column('file_name', sa.String(length=255), nullable=True),
    sa.Column('file_url', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['report_id'], ['reports.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stock_movement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_code', sa.String(length=100), nullable=False),
    sa.Column('quantity_change', sa.Float(), nullable=False),
    sa.Column('from_warehouse_id', sa.Integer(), nullable=True),
    sa.Column('to_warehouse_id', sa.Integer(), nullable=True),
    sa.Column('movement_type', sa.String(length=50), nullable=False),
    sa.Column('job_item_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('user', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['from_warehouse_id'], ['warehouse.id'], ),
    sa.ForeignKeyConstraint(['job_item_id'], ['job_items.id'], ),
    sa.ForeignKeyConstraint(['to_warehouse_id'], ['warehouse.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('stock_movement', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_stock_movement_product_code'), ['product_code'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('stock_movement', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_stock_movement_product_code'))

    op.drop_table('stock_movement')
    op.drop_table('attachments')
    op.drop_table('reports')
    op.drop_table('job_items')
    with op.batch_alter_table('billing_status', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_billing_status_job_id'))

    op.drop_table('billing_status')
    with op.batch_alter_table('stock_level', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_stock_level_product_code'))

    op.drop_table('stock_level')
    op.drop_table('jobs')
    op.drop_table('warehouse')
    op.drop_table('users')
    op.drop_table('customers')
    # ### end Alembic commands ###
