import os
import sys
from datetime import datetime
from googleapiclient.errors import HttpError

# ‡πÄ‡∏û‡∏¥‡πà‡∏° Path ‡∏Ç‡∏≠‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ import app ‡πÑ‡∏î‡πâ
sys.path.append(os.path.abspath(os.path.dirname(__file__)))

from app import app, db, Job, Customer, Report, Attachment
from app import get_google_drive_service, find_or_create_drive_folder, sanitize_filename

def consolidate_legacy_attachments():
    """
    ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå Attachment ‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô Google Drive
    ‡πÉ‡∏´‡πâ‡∏°‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    """
    print("--- üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå Attachment ‡πÄ‡∏Å‡πà‡∏≤ ---")
    
    drive_service = get_google_drive_service()
    if not drive_service:
        print("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö Google Drive API ‡πÑ‡∏î‡πâ")
        return

    # 1. ‡∏´‡∏≤ ID ‡∏Ç‡∏≠‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏ô‡∏ö
    attachments_base_folder_id = os.environ.get('GOOGLE_DRIVE_FOLDER_ID')
    if not attachments_base_folder_id:
        print("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ GOOGLE_DRIVE_FOLDER_ID ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå .env")
        return
        
    print(f"üóÇÔ∏è  ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå: {attachments_base_folder_id}")

    # 2. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Attachment ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    with app.app_context():
        # Query ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û
        attachments_to_check = db.session.query(Attachment, Job, Customer).select_from(Attachment).join(Report).join(Job).join(Customer).all()

    total_attachments = len(attachments_to_check)
    print(f"üîé ‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏ô‡∏ö‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {total_attachments} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö...")

    moved_count = 0
    skipped_count = 0
    error_count = 0
    not_found_count = 0

    # 3. ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
    for index, (attachment, job, customer) in enumerate(attachments_to_check):
        file_id = attachment.drive_file_id
        
        print(f"\n[{index + 1}/{total_attachments}] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå ID: {file_id} (‡∏Ç‡∏≠‡∏á‡∏á‡∏≤‡∏ô ID: {job.id})")

        try:
            # 3.1. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≤‡∏Å Drive ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ß‡πà‡∏≤‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏´‡∏ô
            file_metadata = drive_service.files().get(
                fileId=file_id, fields='id, name, parents, trashed'
            ).execute()

            if file_metadata.get('trashed'):
                print(f"    - üóëÔ∏è ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ‡πÑ‡∏ü‡∏•‡πå‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß (‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ñ‡∏±‡∏á‡∏Ç‡∏¢‡∏∞) -> ‡∏Ç‡πâ‡∏≤‡∏°")
                skipped_count += 1
                continue

            current_parents = file_metadata.get('parents', [])
            if not current_parents:
                print(f"    - ‚ö†Ô∏è ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÅ‡∏°‡πà (Orphaned File) -> ‡∏Ç‡πâ‡∏≤‡∏°")
                skipped_count += 1
                continue
            
            current_parent_id = current_parents[0]

            # 3.2. ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏´‡∏≤‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
            monthly_folder_name = job.created_date.strftime('%Y-%m')
            sanitized_customer_name = sanitize_filename(customer.name or 'Unknown_Customer')
            customer_job_folder_name = f"{sanitized_customer_name} - {job.id}"

            # 3.3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
            # ‡πÇ‡∏î‡∏¢‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤ parent folder ‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå ‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            parent_folder_info = drive_service.files().get(fileId=current_parent_id, fields='name').execute()
            if parent_folder_info['name'] == customer_job_folder_name:
                print(f"    - ‚úÖ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß ('{customer_job_folder_name}') -> ‡∏Ç‡πâ‡∏≤‡∏°")
                skipped_count += 1
                continue

            # 3.4. ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å ‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏¢‡πâ‡∏≤‡∏¢
            print(f"    - üöö ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ‡πÑ‡∏ü‡∏•‡πå‡∏≠‡∏¢‡∏π‡πà‡∏ú‡∏¥‡∏î‡∏ó‡∏µ‡πà! (‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå '{parent_folder_info['name']}')")
            
            # ‡∏™‡∏£‡πâ‡∏≤‡∏á/‡∏´‡∏≤‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á
            print(f"    - üìÇ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏´‡∏≤/‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á: '{monthly_folder_name}/{customer_job_folder_name}'")
            attachments_folder_id = find_or_create_drive_folder("Task_Attachments", attachments_base_folder_id)
            monthly_folder_id = find_or_create_drive_folder(monthly_folder_name, attachments_folder_id)
            destination_folder_id = find_or_create_drive_folder(customer_job_folder_name, monthly_folder_id)

            if not destination_folder_id:
                print(f"    - ‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡πÑ‡∏î‡πâ -> ‡∏Ç‡πâ‡∏≤‡∏°")
                error_count += 1
                continue
            
            # ‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå
            drive_service.files().update(
                fileId=file_id,
                addParents=destination_folder_id,
                removeParents=current_parent_id
            ).execute()
            
            print(f"    - ‚ú® ‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå '{file_metadata['name']}' ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
            moved_count += 1

        except HttpError as e:
            if e.resp.status == 404:
                print(f"    - ‚ùå ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡πÉ‡∏ô Google Drive (‡∏≠‡∏≤‡∏à‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡∏ñ‡∏≤‡∏ß‡∏£) -> ‡∏Ç‡πâ‡∏≤‡∏°")
                not_found_count += 1
            else:
                print(f"    - ‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏à‡∏≤‡∏Å Google API: {e} -> ‡∏Ç‡πâ‡∏≤‡∏°")
                error_count += 1
        except Exception as e:
            print(f"    - ‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏≤‡∏î‡∏Ñ‡∏¥‡∏î: {e} -> ‡∏Ç‡πâ‡∏≤‡∏°")
            error_count += 1

    print("\n--- ‚úÖ ‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô ---")
    print(f"‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•:")
    print(f"  - ‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {moved_count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
    print(f"  - ‡∏Ç‡πâ‡∏≤‡∏° (‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÅ‡∏•‡πâ‡∏ß/‡∏ñ‡∏π‡∏Å‡∏•‡∏ö): {skipped_count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
    print(f"  - ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô Drive: {not_found_count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
    print(f"  - ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {error_count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
    print("------------------------------------")


if __name__ == "__main__":
    consolidate_legacy_attachments()